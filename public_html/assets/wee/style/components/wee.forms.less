.wee-form () when (@formEnabled = true) {
	form {
		.spaced();
	}
	button,
	input,
	select,
	textarea {
		margin: 0;
		outline: 0;
		.font(@inputFont; @inputFontSize; normal);
	}
	button::-moz-focus-inner,
	input::-moz-focus-inner {
		border: 0;
		padding: 0;
	}
	.input-placeholder();
	fieldset {
		border: 0;
		.spaced();
	}
	legend {
		border: 0;
		color: @legendColor;
		.font(@legendFont; @legendFontSize);
		.line-height();
		.spaced-block(@legendMarginBottom);
	}
	label {
		font-weight: @labelFontWeight;
		.line-height(@labelLineHeight);
		.spaced-block(@labelMarginBottom);
	}
	input[type='checkbox'],
	input[type='radio'] {
		padding: 0;
		.margin(right; @checkboxMarginRight);
	}
	.input () {
		background-clip: border-box;
		color: @inputColor;
		width: 100%;
		.background(@inputBackground);
		.padding(@inputPaddingVertical; @inputPaddingHorizontal);
		.spaced(@inputMarginBottom);
		&:focus {
			&:required {
				&:invalid {
					color: @inputColorInvalid;
					.background(@inputBackgroundInvalid);
					.border(@inputBorderColorInvalid);
				}
			}
		}
		&:invalid {
			color: @inputColorInvalid;
			.background(@inputBackgroundInvalid);
			.check () when not (@inputBorderWidthInvalid = 0)
					and not (@inputBorderWidthInvalid = false) {
				.border(@inputBorderColorInvalid; @inputBorderWidthInvalid);
				&:hover {
					.border(@inputBorderColorInvalidHover);
				}
				&:focus {
					.border(@inputBorderColorInvalidFocus);
				}
			}
			.check () when (@inputBorderWidthInvalid = 0), (@inputBorderWidthInvalid = false) {
				border-width: 0;
			}
			.check();
		}
		&:required {
			color: @inputColorRequired;
			.background(@inputBackgroundRequired);
			.border(@inputBorderColorRequired);
			.check () when not (@inputBorderWidthRequired = 0)
					and not (@inputBorderWidthRequired = false) {
				.border(@inputBorderColorRequired; @inputBorderWidthRequired);
				&:hover {
					.border(@inputBorderColorRequiredHover);
				}
				&:focus {
					.border(@inputBorderColorRequiredFocus);
				}
			}
			.check () when (@inputBorderWidthRequired = 0), (@inputBorderWidthRequired = false) {
				border-width: 0;
			}
			.check();
		}
	}
	.input () when not (@inputBorderWidth = 0)
			and not (@inputBorderWidth = false) {
		.border(@inputBorderColor; @inputBorderWidth);
		&:hover {
			.border(@inputBorderColorHover);
		}
		&:focus {
			.border(@inputBorderColorFocus);
		}
	}
	.input () when (@inputBorderWidth = 0), (@inputBorderWidth = false) {
		border-width: 0;
	}
	.input () when not (@inputMinHeight = false) {
		.min-height(@inputMinHeight);
	}
	.input () when not (@inputMinWidth = false) {
		.min-width(@inputMinWidth);
	}
	.input () when not (@inputRounded = false) {
		.rounded(@inputRounded);
	}
	.input () when (@inputEnableInnerShadow = true) {
		.shadow(inner; dark; .1; 1px; 1px; 2px; 0);
	}
	.input () when (@inputEnableFocusOuterShadow = true) {
		&:focus {
			.shadow(dark; .1; 0; 0; 2px; 2px);
		}
	}
	input[type='email'],
	input[type='file'],
	input[type='number'],
	input[type='password'],
	input[type='search'],
	input[type='tel'],
	input[type='text'],
	select,
	textarea {
		.input();
	}
	input[type='search'] {
		-moz-box-sizing: content-box;
		-webkit-appearance: textfield;
		-webkit-box-sizing: content-box;
		box-sizing: content-box;
	}
	input[type='search']::-webkit-search-decoration,
	input[type='search']::-webkit-search-cancel-button {
		-webkit-appearance: none;
		display: none;
	}
	button,
	html input[type='button'],
	input[type='reset'],
	input[type='submit'] {
		-webkit-appearance: button;
		cursor: pointer;
	}
	select {
		cursor: pointer;
		.padding(right; @inputPaddingVertical);
		&[multiple] {
			vertical-align: top;
			.min-height(@multiSelectMinHeight);
			&:after {
				content: ' ';
			}
		}
	}
	textarea {
		vertical-align: top;
		.line-height(@textareaLineHeight);
		.min-height(@textareaMinHeight);
		.padding(@textareaPaddingVertical; @textareaPaddingHorizontal);
		.resizable(@textareaResize);
	}
	input[disabled] {
		color: @inputColorDisabled;
		cursor: @inputCursorDisabled;
		.background-color(@inputBackgroundDisabled);
	}
	.inline-field {
		button,
		input,
		select,
		textarea {
			display: inline-block;
			width: auto;
		}
		label {
			display: inline-block;
			.margin(right; @labelMarginRight);
		}
	}
}
.wee-form();